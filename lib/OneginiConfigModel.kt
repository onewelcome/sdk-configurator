package com.onegini.mobile.sdk.android

import android.os.Build
import com.onegini.mobile.sdk.android.model.OneginiClientConfigModel

class OneginiConfigModel : OneginiClientConfigModel {
  /* Config model generated by SDK Configurator version: CONFIGURATOR_VERSION */
  override val appIdentifier = "value_will_be_replaced" 
  override val appPlatform = "android"
  override val redirectUri = "value_will_be_replaced"
  override val appVersion = "value_will_be_replaced"
  override val baseUrl = "value_will_be_replaced"
  override val resourceBaseUrl = "value_will_be_replaced"
  override val keyStoreHash = "value_will_be_replaced"
  override val serverPublicKey: String? = null
  override val serverType = "value_will_be_replaced"
  override val serverVersion = "value_will_be_replaced"
  override val certificatePinningKeyStore = R.raw.keystore
  override val deviceName = "${Build.BRAND} ${Build.MODEL}"
 
  override fun toString(): String {
    return "ConfigModel{" +
        "  appIdentifier='" + appIdentifier + "'" +
        ", appPlatform='" + appPlatform + "'" +
        ", redirectUri='" + redirectUri + "'" +
        ", appVersion='" + appVersion + "'" +
        ", baseUrl='" + baseUrl + "'" +
        ", resourceBaseUrl='" + resourceBaseUrl + "'" +
        ", keyStoreHash='" + keyStoreHash + "'" +
        ", serverPublicKey='" + serverPublicKey + "'" +
        ", serverType='" + serverType + "'" +
        ", serverVersion='" + serverVersion + "'" +
        "}"
  }
}
